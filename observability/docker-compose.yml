version: '3.8'

services:
  # NATS with JetStream - using specific compatible version
  nats:
    image: nats:latest  # Using older stable version for compatibility
    container_name: concordance-nats
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
    command: [
      "-js", 
    ]
    volumes:
      - nats-data:/data
    networks:
      - concordance-net
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Loki for log aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: concordance-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    networks:
      - concordance-net
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Tempo for distributed tracing
  tempo:
    image: grafana/tempo:2.3.0
    container_name: concordance-tempo
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo-config.yaml:/etc/tempo.yaml:ro
      - tempo-data:/tmp/tempo
    ports:
      - "3200:3200"   # Tempo query frontend
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
    networks:
      - concordance-net

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: concordance-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=concordance
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_LOG_LEVEL=debug  # For debugging provisioning issues
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - loki
      - tempo
    networks:
      - concordance-net
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Vector for log collection and shipping
  vector:
    image: timberio/vector:0.34.0-alpine
    container_name: concordance-vector
    volumes:
      - ./vector.toml:/etc/vector/vector.toml:ro
      - ./logs:/logs:ro  # Mount directory where Concordance writes logs
    command: ["--config", "/etc/vector/vector.toml"]
    depends_on:
      loki:
        condition: service_healthy
    networks:
      - concordance-net
    restart: unless-stopped

networks:
  concordance-net:
    driver: bridge

volumes:
  nats-data:
  loki-data:
  tempo-data:
  grafana-data: