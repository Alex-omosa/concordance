# Minimal Vector configuration that actually works

# Input: Read logs from file
[sources.concordance_logs]
type = "file"
include = ["/logs/*.log"]
read_from = "beginning"

# Transform: Minimal processing to avoid VRL errors
[transforms.parse_concordance]
type = "remap"
inputs = ["concordance_logs"]
source = '''
# Set basic required fields
.job = "concordance"
.level = "INFO" 
.target = "unknown"

# Try to parse JSON, but don't fail if it's not valid JSON
if is_string(.message) {
    parsed, err = parse_json(.message)
    if err == null {
        if exists(parsed.level) {
            .level = to_string(parsed.level)
        }
        if exists(parsed.target) {
            .target = to_string(parsed.target) 
        }
        if exists(parsed.correlation_id) {
            .correlation_id = to_string(parsed.correlation_id)
        }
        if exists(parsed."aggregate.type") {
            .aggregate_type = to_string(parsed."aggregate.type")
        }
    }
}

# Set defaults for missing fields
if !exists(.correlation_id) {
    .correlation_id = ""
}
if !exists(.aggregate_type) {
    .aggregate_type = "unknown"
}
'''

# Output: Send to Loki
[sinks.loki]
type = "loki"
inputs = ["parse_concordance"]
endpoint = "http://loki:3100"
encoding.codec = "json"
healthcheck.enabled = true

# Simple labels
[sinks.loki.labels]
job = "concordance"
level = "{{ level }}"